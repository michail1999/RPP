import java.math.BigInteger;
import javax.swing.JOptionPane;

public class CharForm extends javax.swing.JFrame {

    public CharForm() {
        initComponents();
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setTitle("Character");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null}
                },
                new String [] {
                        "Symbol", "Decimal code"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                    true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {"Bits in nibble", null, null, null, null},
                        {"16-mal digit", null, null, null, null}
                },
                new String [] {
                        "Nibbles", "Nibble 3 (15-12)", "Nibble 2 (11-8)", "Nibble 1 (7-4)", "Nibble 0 (3-0)"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("Analyze");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1))
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(15, 15, 15)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    private String addZeroToHex(String str){
        while(str.length() != 4){
            str = new StringBuffer(str).insert(0, '0').toString();
            addZeroToHex(str);
        }
        return str;
    }

    private String hexToBin(String s) {
        return new BigInteger(s, 16).toString(2);
    }

    private String addZeroToBin(String str){
        while(str.length() != 16){
            str = new StringBuffer(str).insert(0, '0').toString();
            addZeroToBin(str);
        }
        return str;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {

        if(jTable1.getModel().getValueAt(0, 0) != null){
            if(jTable1.getModel().getValueAt(0, 0).toString().length() > 1){
                JOptionPane.showMessageDialog(rootPane, "Enter single symbol", "Error", 0);
            }else{
                // print decimal representation
                int decimal = (int)jTable1.getModel().getValueAt(0, 0).toString().charAt(0);

                jTable1.getModel().setValueAt((Integer)decimal, 0, 1);

                // create hex
                String hex = addZeroToHex(Integer.toHexString(decimal));

                for(int i = 1; i < jTable2.getModel().getRowCount(); ++i){
                    for(int j = 1; j < jTable2.getModel().getColumnCount(); ++j){
                        jTable2.getModel().setValueAt((Character)hex.charAt(j - 1), i, j);
                    }
                }

                // create bin
                String bin = addZeroToBin(hexToBin(hex));

                for(int i = 0; i < jTable2.getModel().getRowCount(); i += 2){
                    for(int j = 1;;){
                        jTable2.getModel().setValueAt(bin.substring(0, 4), i, j);
                        break;
                    }
                }

                for(int i = 0; i < jTable2.getModel().getRowCount(); i += 2){
                    for(int j = 2;;){
                        jTable2.getModel().setValueAt(bin.substring(4, 8), i, j);
                        break;
                    }
                }

                for(int i = 0; i < jTable2.getModel().getRowCount(); i += 2){
                    for(int j = 3;;){
                        jTable2.getModel().setValueAt(bin.substring(8, 12), i, j);
                        break;
                    }
                }

                for(int i = 0; i < jTable2.getModel().getRowCount(); i += 2){
                    for(int j = 4;;){
                        jTable2.getModel().setValueAt(bin.substring(12, 16), i, j);
                        break;
                    }
                }

            }
        }else JOptionPane.showMessageDialog(rootPane, "Enter symbol", "Error", 0);

    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CharForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
            new CharForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration
}
