import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;

public class DoubleForm extends javax.swing.JFrame {

    public DoubleForm() {
        initComponents();
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        num_tab = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        out_tab = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setTitle("Double");
        setResizable(false);

        num_tab.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null}
                },
                new String [] {
                        "Number"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(num_tab);
        if (num_tab.getColumnModel().getColumnCount() > 0) {
            num_tab.getColumnModel().getColumn(0).setResizable(false);
        }

        out_tab.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null}
                },
                new String [] {
                        "Sign", "Order of magnitude", "Mantissa"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                    false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(out_tab);
        if (out_tab.getColumnModel().getColumnCount() > 0) {
            out_tab.getColumnModel().getColumn(0).setResizable(false);
            out_tab.getColumnModel().getColumn(1).setResizable(false);
            out_tab.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton1.setText("Analyze");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {

        if(num_tab.getModel().getValueAt(0, 0) == null){
            JOptionPane.showMessageDialog(rootPane, "Enter nuber in table 1", "Error", ERROR_MESSAGE);
        }else{
            float numberFromInput = (float)num_tab.getModel().getValueAt(0, 0);
            long bits = Float.floatToRawIntBits(numberFromInput);

            // Знак числа
            long sign = bits & (long)Math.pow(2, 31);
            if(sign != 0)
                sign = 1;
            out_tab.getModel().setValueAt(sign, 0, 0);

            // Характеристика числа
            long orderOfMagnitude = 0;
            int weight = 23;
            for(int i = 1; i <= 128; i = i + i){
                long currentBit = bits & (long)Math.pow(2, weight);
                if(currentBit != 0)
                    currentBit = 1;
                orderOfMagnitude = orderOfMagnitude + i * currentBit;
                ++weight;
            }
            out_tab.getModel().setValueAt(orderOfMagnitude, 0, 1);

            // Мантисса
            float mantissa = 0;
            float bugger = 0.5f;
            for(weight = 22; weight >= 0; --weight){
                long currentBit = bits & (long)Math.pow(2, weight);
                if(currentBit != 0)
                    currentBit = 1;
                mantissa = mantissa + bugger * currentBit;
                bugger /= 2;
            }
            out_tab.getModel().setValueAt(mantissa, 0, 2);
        }

    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoubleForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
            new DoubleForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable num_tab;
    private javax.swing.JTable out_tab;
    // End of variables declaration                   
}
