import java.util.LinkedList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;

public class RootForm extends javax.swing.JFrame {

    public RootForm() {
        initComponents();
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableI = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableO = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("lab4.3 Гальянов");
        setLocation(new java.awt.Point(350, 350));
        setResizable(false);

        tableI.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null, null}
                },
                new String [] {
                        "Indices", "0", "1", "2", "3", "4", "5"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                    false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableI);
        if (tableI.getColumnModel().getColumnCount() > 0) {
            tableI.getColumnModel().getColumn(0).setResizable(false);
        }

        jButton1.setText("Посчитать");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tableO.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null, null}
                },
                new String [] {
                        "Indices", "0", "1", "2", "3", "4", "5"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableO);
        if (tableO.getColumnModel().getColumnCount() > 0) {
            tableO.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel1.setText("Sorted array (bubble sort)");

        jLabel2.setText("Source array");

        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane2.setViewportView(ta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
                        .addComponent(jScrollPane3)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel2))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private static Integer[] bubbleSort(Integer[] arr){
        int len = arr.length;
        int temp;

        for(int i = 0; i < len; ++i){
            for(int j = 1; j < len; ++j){
                if(arr[j - 1] > arr[j]){
                    temp = arr[j - 1];
                    arr[j - 1] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        return arr;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {

        LinkedList<String> array = new LinkedList<>();

        for(Integer i = 0; i < tableI.getModel().getRowCount(); ++i){
            for(Integer j = 0; j < tableI.getModel().getColumnCount(); ++j){
                if(i == 0 && j == 0)
                    ++j;
                else{
                    if(tableI.getModel().getValueAt(i, j) == null){
                        JOptionPane.showMessageDialog(rootPane, "Enter all values to the table above correctly", "Error", ERROR_MESSAGE);
                        return;
                    }
                }
            }
        }

        ta.setText("Исходный массив\n");
        for(Integer i = 0; i < tableI.getModel().getRowCount(); ++i){
            for(Integer j = 0; j < tableI.getModel().getColumnCount(); ++j){
                if(i == 0 && j == 0)
                    continue;
                ta.append(tableI.getModel().getValueAt(i, j).toString() + "\t");
                array.add(tableI.getModel().getValueAt(i, j).toString());
            }
        }

        ta.append("\n----------------------------------------------------------------------------------");
        ta.append("\nСумма элементов (x > 0)\n");
        Integer sum = 0;
        for(int i = 0; i < array.size(); ++i){
            Integer elem = Integer.parseInt(array.get(i));
            if(elem  > 0)
                sum += elem;
        }

        String total = Integer.toString(sum);
        ta.append(total);

        LinkedList<Integer> arr2 = new LinkedList<>();

        for(int i = 0; i < array.size(); ++i){
            Integer e = Integer.parseInt(array.get(i));
            arr2.add(e);
        }

        Integer[] toBubble = arr2.toArray(new Integer[arr2.size()]);
        Integer[] sorted = bubbleSort(toBubble);

        for(Integer i = 0; i < tableO.getModel().getRowCount(); ++i){
            for(Integer j = 0; j < tableO.getModel().getColumnCount(); ++j){
                if(i == 0 && j == 0)
                    continue;
                tableO.setValueAt(sorted[j - 1], i, j);
            }
        }

    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RootForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RootForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RootForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RootForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RootForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea ta;
    private javax.swing.JTable tableI;
    private javax.swing.JTable tableO;
    // End of variables declaration
}
